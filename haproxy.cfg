# CoNfiguration allows
# * redirect default requests to posesor-frontend part
# * redirect backend.posesor.net requests to posesor-backend part

# To construct the configuration file, I used:
# http://www.haproxy.org/download/1.7/doc/configuration.txt
# and some random examples from dark Internet

global
        log 127.0.0.1   local0 # define global logging to avoid warning 
                               # [WARNING] 121/082253 (1) : config : log format ignored for frontend 'http-in' since it has no log address
        
        # maximum number of simultaneous active connections
        # if you found it as a limitation, it is time when I am a rich man :)
        maxconn 256 
 
resolvers docker
        # well known docker dns server address
        nameserver dns 127.0.0.11:53
        #HAProxy will hold name-ip mapping for 1s, so for each request new container ip will be resolved, balancing load
        hold valid 1s 

# Proxy configuration can be located in a set of sections :
# - defaults [<name>]
# - frontend <name>
# - backend  <name>
# - listen   <name>

# A "defaults" section sets default parameters for all other sections following
# its declaration. Those default parameters are reset by the next "defaults"
# section. The name is optional but its use is encouraged for better readability.
defaults
        # Right now, two major proxy modes are supported : "tcp", also known as layer 4,
        # and "http", also known as layer 7. In layer 4 mode, HAProxy simply forwards
        # bidirectional traffic between two sides. In layer 7 mode, HAProxy analyzes the
        # protocol, and can interact with it by allowing, blocking, switching, adding,
        # modifying, or removing arbitrary contents in requests or responses, based on
        # arbitrary criteria.
        mode http

        # Enable per-instance logging of events and traffic.
        log global

        # Log details about HTTP requests
        option httplog

        # Enable insertion of the X-Forwarded-For header to requests sent to servers
        # Since HAProxy works in reverse-proxy mode, the servers see its IP address as
        # their client address. This is sometimes annoying when the client's IP address
        # is expected in server logs. To solve this problem, the well-known HTTP header
        # "X-Forwarded-For" may be added by HAProxy to all requests sent to the server.
        # This header contains a value representing the client's IP address. Since this
        # header is always appended at the end of the existing header list, the server
        # must be configured to always use the last occurrence of this header only. See
        # the server's manual to find how to enable use of this standard header. Note
        # that only the last occurrence of the header must be used, since it is really
        # possible that the client has already brought one.
        option  forwardfor

        # TODO describe
        timeout connect  5s
        # TODO describe
        timeout check    5s
        # TODO describe
        timeout client  30s
        # TODO describe
        timeout server  30s
 
        # One very important thing to point out in this config is the ‘option http-server-close’ line.
        # Without this, some of the examples below can behave incorrectly. The option tells HAProxy 
        # to ignore the servers ‘keepalive’ setting. If it were not specified, then in some cases 
        # the conditional rules (used below) would not be re-evaluated every time there is a new request.
        # Instead HAProxy would use the previously established connection for the new request(s) and so
        # therefore would fail to notice that the new request might be a socket request. In short,
        # If you are using WebSockets in a mixed environment, always make sure ‘option http-server-close’ is set.
        # http://blog.silverbucket.net/post/31927044856/3-ways-to-configure-haproxy-for-websockets
        option  http-server-close

        # default backend server options, so we don't need to write it for every 'server' entry below
        # options to set: never fail on address resolution (HAProxy would crash on startup when backend server name could not be resolved), check health every 1s
        # default-server init-addr none inter 1000
 
# A "frontend" section describes a set of listening sockets accepting client connections.
frontend http-in
        bind *:80

        # define acl match for domain backend.posesor.net.
        # this domain needs to be (and already is) defined in public DNS to be reachable from the internet.
        acl host_webapi path_beg /api/
        
        # define acl for websockets
        acl is_websocket hdr(Upgrade) -i WebSocket
        acl is_websocket hdr_beg(Host) -i ws
        
        default_backend webclient-definition
        use_backend webapi-definition if host_webapi
        use_backend webapi-definition if is_websocket host_webapi
        
# A "backend-group" section describes a set of servers to which the proxy will connect
# to forward incoming connections.
backend webapi-definition
        server posesor-webapi backend:8080  check
 
backend webclient-definition
        server frontend-with-nginx frontend:80  check

#STATS
listen stats 
        bind *:9090
        mode http
        stats enable
        stats hide-version
        stats realm Haproxy\ Statistics
        stats uri /
        # TODO change it and hide - now it is stored in GIT repo.
        stats auth stats:stats