# CONfiguration allows
# * redirect default requests to posesor-frontend part
# * redirect backend.posesor.net requests to posesor-backend part

# To construct the configuration file, I used:
# http://www.haproxy.org/download/1.7/doc/configuration.txt
# partially https://gist.github.com/nateware/3987720

global
        # ? log 127.0.0.1   local0
        # ? log 127.0.0.1   local1 notice
        
        # maximum number of simultaneous active connections
        # if you found it as a limitation, it is time when I am a rich man :)
        maxconn 256 
 
resolvers docker
        # well known docker dns server address
    nameserver dns 127.0.0.11:53
        #HAProxy will hold name-ip mapping for 1s, so for each request new container ip will be resolved, balancing load
        hold valid 1s 

# Proxy configuration can be located in a set of sections :
# - defaults [<name>]
# - frontend <name>
# - backend  <name>
# - listen   <name>

# A "defaults" section sets default parameters for all other sections following
# its declaration. Those default parameters are reset by the next "defaults"
# section. The name is optional but its use is encouraged for better readability.
defaults
        # Right now, two major proxy modes are supported : "tcp", also known as layer 4,
        # and "http", also known as layer 7. In layer 4 mode, HAProxy simply forwards
        # bidirectional traffic between two sides. In layer 7 mode, HAProxy analyzes the
        # protocol, and can interact with it by allowing, blocking, switching, adding,
        # modifying, or removing arbitrary contents in requests or responses, based on
        # arbitrary criteria.
        mode    http

        # Enable per-instance logging of events and traffic.
        log     global

        option  httplog
        option  dontlognull
        option  forwardfor
        option  http-server-close
        maxconn 4096
 
        timeout connect  5000
        timeout check    5000
        timeout client  30000
        timeout server  30000
 
        # default backend server options, so we don't need to write it for every 'server' entry below
        # options to set: never fail on address resolution (HAProxy would crash on startup when backend server name could not be resolved), check health every 1s
        default-server init-addr none inter 1000
 
# A "frontend" section describes a set of listening sockets accepting client connections.
frontend http-in
        bind *:80
        
        #define acl match
        acl host_backend hdr(host) -i backend.posesor.net
        #define when to use particular backend
        use_backend posesor-backend if host_backend
        

# A "backend" section describes a set of servers to which the proxy will connect
# to forward incoming connections.
backend posesor-backend
        #Make backend have a server IP resolved by docker dns from name [STACK_NAME]_[SERVICE_NAME] that is located within docker overlay network - in our case - docker overlay network name is "FRONT"
        server backend backend:8080 resolvers docker check
 
#STATS
 
## Here we have proxy definitions to access inner proxy stats. Posesor uses proxies for their apps, 
# we expose that proxies to watch service health and occupation (might be useful for deciding if we
#  need more replicas for particular service)
## However have in mind, that if you have more than one replica of those inner proxies, docker
# load balancer (enabled when sworm will be applied)  will point to different replica for each refresh.
# It's not so important right now to do effort in solving it.
 
frontend http-stats
bind *:9090

    acl url_prod path_beg /prod/
    use_backend stats_prod if url_prod
        
    default_backend my_stats
        
backend my_stats
        stats enable
        stats refresh 15s
        stats uri /stats
        # TODO replace with hidden user and password
        stats auth admin:admin
        stats realm Posesor\ Main\ Proxy\ Statistics
        stats admin if TRUE
 
backend stats_prod
        server backend backend:8080 resolvers docker check
        reqirep  ^(GET|POST|HEAD)\ /prod/(.*)     \1\ /\2
 

# A "listen" section defines a complete proxy with its frontend and backend
# parts combined in one section. It is generally useful for TCP-only traffic.
# Only mentioned to complete the list of sections
# section not used in Posesor
# listen